<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>日历设计 on Ivan’s Blog</title>
    <link>https://ivan.show/blog/tags/%E6%97%A5%E5%8E%86%E8%AE%BE%E8%AE%A1/</link>
    <description>Recent content in 日历设计 on Ivan’s Blog</description>
    <image>
      <title>Ivan’s Blog</title>
      <url>https://ivan.show/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ivan.show/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://ivan.show/blog/tags/%E6%97%A5%E5%8E%86%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用 Python 搭配 Adobe Illustrator 设计一款包含阴历与节气的日历</title>
      <link>https://ivan.show/blog/posts/20201025085806/</link>
      <pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ivan.show/blog/posts/20201025085806/</guid>
      <description>Ai 不像 CDR 一样有日历插件（有脚本但是不好用）。百度谷歌搜索出的教程基本没有带阴历日期的，更不要说直接包含节日、节气等，基本都是手动操作。而在漫天广告里学习到的 Python 技能，在这里终于有了用武之地。
采集数据 要做包含阴历的日历，首先要准备日期数据，百度搜索到的数据，要么不能用、要么不全面，要么就是根本就是网页版的，比如你在百度中搜「日历」，出现的下图中的界面：
没错，其实百度这个数据还是蛮全面的，但是我需要的是纯文本或者表格之类的数据，所以先看一下能不能通过抓包找到它调用的后台数据。
打开浏览器自带的「开发者工具」，跳到 Network 选项卡，随便点个月份，找一下调用接口。
直接是 json 格式的数据，我把这个请求导入到 Postman 中，看看请求需不需要授权信息什么的，还是说匿名请求就可以：
在 Postman 中多次请求发现，多数参数都可以是非必要的，红圈中的参数都可以去掉。同时经过测试，请求头 header 部分也可以全部忽略：
但是这些数据过多，肯定需要将数据重组，做成我需要的格式，这时候就需要用到 Python 或者是一些其它你比较熟悉的语言，目标一定是快速高效。
Python 脚本 第一步可以直接使用 Postman 的 Code 功能为你生成一份简单的请求脚本：
然后拿出你熟悉的编辑器或者 IDE，我这里使用的是 VSCode，当然提前已配置好了 Python 环境，先跑一遍生成后的脚本看有没有什么问题。
OK 虽然都是乱码，但可以成功请求到，然后简单处理一下脚本，就可以让它输出成我们想要到内容。
因为设计日历的时候，如果出现节日、节气、或者标记阴历月份，会占用到阴历位置，而分析发现百度在阴历部分有一个自己的优先级：
其中的字段分别是 term &amp;gt; desc &amp;gt; value &amp;gt; lDate
另外还有一个前提就是，不能超最大 4 个汉字，如果超出，则按照优先级往下，如果全部超出，则最终显示阴历日期。
最终的脚本将让使用者自己输入起始年份月份与结束年份月份，抓取到的信息将以 csv 的格式存储为一个表格文件。
使用脚本 Mac 系统下有现成的 Python 环境，直接使用 python3 脚本名称.py 命令，会在同目录下，生成一个 csv 的表格文件，该文件存放的就是我们最终要使用的日历数据。如果提示没有 requests 模块，输入 pip3 install requests 安装即可。</description>
    </item>
    
  </channel>
</rss>
