<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Ivan’s Blog</title>
    <link>https://ivan.show/blog/posts/</link>
    <description>Recent content in Posts on Ivan’s Blog</description>
    <image>
      <title>Ivan’s Blog</title>
      <url>https://ivan.show/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ivan.show/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 16 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ivan.show/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stable Diffusion 的部署</title>
      <link>https://ivan.show/blog/posts/20230608215719/</link>
      <pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ivan.show/blog/posts/20230608215719/</guid>
      <description>与 Midjourney 不同，Stable Diffusion 的部署需要相对高端的显卡。家里的 Windows 机器是一台老的 4790k + GTX970 4G，显存是刚刚达到使用 SD 的入门级别。
因为国内网络环境的问题，即便是挂了梯子的网络，安装原版 WebUI 也可能出现各种问题，要不就是速度慢，再不然就是安装报错，所以很多人使用别人封装好的一键部署包，除了具有原版的功能，还附加了很多好用的插件，但过程实在简单，这里就不赘述。
这篇文章主要讲原版在 Windows 下的部署方法。
首先，Python 与 Git 是必然要装的，git 版本号无所谓，而 Python 尽量是安装 3.10.6 版本（以目前的时间点来说的，未来官方会有新的建议版本）。
基本的环境有了之后，就可以通过 git 拉取一个叫 stable-diffusion-Webui 的项目：
git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git 下载完成后双击运行项目目录下的 webui-user.bat ，不要使用管理员身份运行，双击即可，如果提前解决了网络问题，只要通过一定时间的等待，就能自动完成整个生产环境的部署。
最终，打开 http://localhost:7860 这个本地地址，即可看到 SD 的 webui 界面了。</description>
    </item>
    
    <item>
      <title>使用 Obsidian 搭配 hugo 与阿里 oss 搭建博客系统</title>
      <link>https://ivan.show/blog/posts/20220609215214/</link>
      <pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ivan.show/blog/posts/20220609215214/</guid>
      <description>没想到刚用上 hexo，还不到 1 天就换成 hugo 了。看项目星星数量，hugo 显然是比 hexo 要多上不少，且主题的素质明显高出很多，猜测大概率也是颜值的助益。
安装 通过 brew install hugo 直接安装二进制文件 另外如果没装 Git 一定要装上 初始化 通过命令 hugo new site 目录名称 来创建一个项目目录 然后使用 git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 命令克隆一个主题到 themes 子目录里 修改项目中的 hugo.toml 配置文件中的 theme 参数为 PaperMod 这个主题 最后在项目目录里使用 hugo server 就能启用一个本地服务器，看到站点预览了 关于 PaperMod 主题 后来才知道，hugo 的配置文件有两种模式，默认是 hugo.toml 这个配置文件，而 PaperMod 主题需要使用 yml 格式的配置文件，如果站点已经创建，就删除掉 hugo.toml 配置文件，然后新建一个 config.yml 文件在根目录中，再填入主题官方给的默认配置内容：
baseURL: &amp;#34;https://examplesite.com/&amp;#34; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema.</description>
    </item>
    
    <item>
      <title>使用 Obsidian 搭配 hexo 与阿里云 oss 搭建博客系统</title>
      <link>https://ivan.show/blog/posts/20220608123852/</link>
      <pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ivan.show/blog/posts/20220608123852/</guid>
      <description>前段时间看了刘未鹏的《暗时间》这本书后决心开始写博客，虽然是设计师出身，但骨子里还是对技术有狂热追求。
原本是想直接在少数派的 Mtrix 社区直接写了发表，但是有一些硬核或是自认为没有什么价值的文章可能会影响我在少数派写作的数据，所以还是决定自己搭建一个静态博客，文章放在本地，想发布的时候就发布，使用一些自动化工具，即便没有数据库，也能通过目录来管理博客内容。
搭配 Obsidian 使用 Hexo 已经习惯了在 Obsidian 中写东西，也希望把 OBS 作为 All in one 的入口，所以无论是链接到别处的多维表格，还是链接在本地目录的某个设计源文件，都先通过一个 md 文档来建立起基本的项目信息，要搭建博客，也会优先考虑纯静态配合 md 文档的 Hexo。
我的 Obsidian 使用了 iCloud 同步，并不适合使用 git 发布，因此我在笔记库中新建一个文件夹，专门用来发布文章到 Hexo，这过程中就需要创建一个软链接，将 Hexo 项目目录中的 source/_posts 指向该文件夹，在使用 Hexo 生成目录的时候，就会自动检索被其链接的 Obsidian 文件夹下的 md 文档了。
但是使用软连接的方法并没有生效，最终使用 ln -s 创建硬链接解决。 完整的指令如下：
ln -s &amp;#34;~/Library/Mobile Documents/iCloud~md~obsidian/Documents/Ivan’s wiki/100-Project/博客文章&amp;#34; &amp;#34;~/Desktop/Hexo/source/_post&amp;#34; 此时再使用 npx hexo g 生成即可准确识别到 md 文档，下一步是自动发布到阿里云的 OSS。
部署到 OSS 因为阿里云 OSS 的首页是简历，所以博客部分通过创建一个新的 blog 子文件夹来存放，而发布过程需要一个 hexo 部署插件：hexo-deployer-ali-oss
执行模块的安装：npm i hexo-deployer-ali-oss --save 修改配置文件 _config.</description>
    </item>
    
  </channel>
</rss>
